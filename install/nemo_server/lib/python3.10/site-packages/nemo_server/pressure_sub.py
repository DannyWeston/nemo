import rclpy
from rclpy.node import Node

from sensor_msgs.msg import FluidPressure

class PressureSub(Node):

    def __init__(self):
        super().__init__('pressure_sub')

        self.topic = '/nemo/pressure'

        # Create subscriber with queue size of 10 messages
        self.subscription = self.create_subscription(FluidPressure, self.topic, self.listener_callback, 10)
        self.subscription  # prevent unused variable warning

        self.water_pressure = 0     # Water pressure in Pascals
        self.drone_depth = 0        # Calculated submersion depth in Metres

        # air pressure taken to be 101.325 kPa
        self.air_pressure = 101325
        
        self.get_logger().info(f'Subscribed to {self.topic} topic\n')

    def listener_callback(self, msg):
        # Apply thresholding to water pressure reading
        self.water_pressure = max(msg.fluid_pressure, self.air_pressure) - self.air_pressure

        # water pressure per meter of depth (assuming 1000 kg / m^3 @ 4 degrees Celsius)
        # With standard gravitational constant of 9.80665 m  /s^2
        # = 9.80665 kPa / m 
        self.drone_depth = self.water_pressure / 9806.65
        self.get_logger().info(f'Water Pa {self.water_pressure} | Depth m {self.drone_depth}')
        
def main(args=None):
    rclpy.init(args=args)

    pressureSub = PressureSub()

    rclpy.spin(pressureSub)

    pressureSub.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()